package Inventory;

import Entity.Product;
import Entity.Report;
import Entity.Warehouse;
import java.awt.Color;
import java.util.List;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Bernardo
 */
public class Inventory extends javax.swing.JFrame {

    public Inventory() {
        initComponents();
        loadData("warehouses"); 
        loadData("products");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        addWarehouseBtn = new javax.swing.JButton();
        addProductBtn = new javax.swing.JButton();
        deleteWarehouseBtn = new javax.swing.JButton();
        deleteProductBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        editWarehouseBtn = new javax.swing.JButton();
        editProductBtn = new javax.swing.JButton();
        reportBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        showWarehousesTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        showProductsTable = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        reportTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));
        setLocationByPlatform(true);
        setUndecorated(true);
        setSize(new java.awt.Dimension(800, 600));

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));

        addWarehouseBtn.setText("Add Warehouse");
        addWarehouseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWarehouseBtnActionPerformed(evt);
            }
        });

        addProductBtn.setText("Add Product");
        addProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductBtnActionPerformed(evt);
            }
        });

        deleteWarehouseBtn.setText("Delete Warehouse");
        deleteWarehouseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteWarehouseBtnActionPerformed(evt);
            }
        });

        deleteProductBtn.setText("Delete Product");
        deleteProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProductBtnActionPerformed(evt);
            }
        });

        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        editWarehouseBtn.setText("Edit Warehouse");
        editWarehouseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editWarehouseBtnActionPerformed(evt);
            }
        });

        editProductBtn.setText("Edit Product");
        editProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProductBtnActionPerformed(evt);
            }
        });

        reportBtn.setText("REPORT");
        reportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addWarehouseBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addProductBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteWarehouseBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteProductBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editWarehouseBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editProductBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reportBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(addWarehouseBtn)
                .addGap(18, 18, 18)
                .addComponent(addProductBtn)
                .addGap(18, 18, 18)
                .addComponent(deleteWarehouseBtn)
                .addGap(18, 18, 18)
                .addComponent(deleteProductBtn)
                .addGap(18, 18, 18)
                .addComponent(editWarehouseBtn)
                .addGap(18, 18, 18)
                .addComponent(editProductBtn)
                .addGap(62, 62, 62)
                .addComponent(reportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addComponent(exitBtn)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        showWarehousesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Min", "Max"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        showWarehousesTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(showWarehousesTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        showProductsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Total", "Remaining", "Warehouse"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        showProductsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(showProductsTable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(335, 335, 335))
        );

        reportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "On Stock", "Sold", "Total", "Warehouse"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        reportTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(reportTable);
        if (reportTable.getColumnModel().getColumnCount() > 0) {
            reportTable.getColumnModel().getColumn(0).setHeaderValue("Product Name");
            reportTable.getColumnModel().getColumn(1).setHeaderValue("On Stock");
            reportTable.getColumnModel().getColumn(2).setHeaderValue("Sold");
            reportTable.getColumnModel().getColumn(3).setHeaderValue("Total");
            reportTable.getColumnModel().getColumn(4).setHeaderValue("Warehouse");
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addWarehouseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWarehouseBtnActionPerformed
        this.dispose();
        AddWarehouseForm addWrh = new AddWarehouseForm();
        addWrh.setVisible(true);        
    }//GEN-LAST:event_addWarehouseBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitBtnActionPerformed

    private void addProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductBtnActionPerformed
        this.dispose();
        AddProductForm addWrh = new AddProductForm();
        addWrh.setVisible(true);
    }//GEN-LAST:event_addProductBtnActionPerformed

    private void reportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportBtnActionPerformed
        loadReport();
        
        
    }//GEN-LAST:event_reportBtnActionPerformed

    private void deleteWarehouseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteWarehouseBtnActionPerformed
        String warehouseID = JOptionPane.showInputDialog(null, "Warehouse ID: ");
        int warehouseInt = Integer.parseInt(warehouseID);
        
        deleteRecordById(warehouseInt, "warehouses");
        JOptionPane.showMessageDialog(null, "Record deleted");
        
    }//GEN-LAST:event_deleteWarehouseBtnActionPerformed

    private void deleteProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProductBtnActionPerformed
        String productID = JOptionPane.showInputDialog(null, "Product ID: ");
        int productInt = Integer.parseInt(productID);
        
        deleteRecordById(productInt, "products");
        JOptionPane.showMessageDialog(null, "Record deleted");
    }//GEN-LAST:event_deleteProductBtnActionPerformed

    private void editWarehouseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editWarehouseBtnActionPerformed
        String warehouseID = JOptionPane.showInputDialog(null, "Warehouse ID: ");
        int warehouseInt = Integer.parseInt(warehouseID);
        Warehouse warehouse = getWarehouseById(warehouseInt);        
        EditWrhForm editForm = new EditWrhForm(warehouse);
        this.dispose();
        editForm.setVisible(true);      
        
    }//GEN-LAST:event_editWarehouseBtnActionPerformed

    private void editProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProductBtnActionPerformed
        String productID = JOptionPane.showInputDialog(null, "Product ID: ");
        int productInt = Integer.parseInt(productID);
        Product product = getProductById(productInt);        
        
        EditProductForm editForm = new EditProductForm(product);
        this.dispose();
        editForm.setVisible(true); 
        
        
        
    }//GEN-LAST:event_editProductBtnActionPerformed

    private Warehouse getWarehouseById(int id) {
        Warehouse warehouse = new Warehouse();
        warehouse.setWarehouseId(id);
        try {
            ConDB conn = new ConDB();
            Statement st = conn.getConnection().createStatement();
            String query = "SELECT * FROM warehouses WHERE id = " + id;
            ResultSet rs = st.executeQuery(query);
            while(rs.next()) {
                warehouse.setWarehouseName(rs.getString("warehouseName"));
                warehouse.setMinProduct(rs.getInt("minProduct"));
                warehouse.setMaxProduct(rs.getInt("maxProduct"));
            }
            
            rs.close();
            st.close();
        } catch (SQLException ex) {
            System.out.println(ex.getLocalizedMessage());
        }
        return warehouse;
    }
    
    private Product getProductById(int id) {
        Product product = new Product();
        product.setProductId(id);
        try {
            ConDB conn = new ConDB();
            Statement st = conn.getConnection().createStatement();
            String query = "SELECT * FROM products WHERE id = " + id;
            ResultSet rs = st.executeQuery(query);
            while(rs.next()) {
                product.setProductName(rs.getString("productName"));
                product.setTotal(rs.getInt("total"));
                product.setRemaining(rs.getInt("remaining"));
                product.setWarehouse_id(rs.getInt("warehouse_id"));
            }
            
            rs.close();
            st.close();
        } catch (SQLException ex) {
            System.out.println(ex.getLocalizedMessage());
        }
        return product;
    }
    
    private void deleteRecordById(int id, String tableName) {
        try {
            ConDB conn = new ConDB();
            Statement st = conn.getConnection().createStatement();
            String query = "DELETE FROM " + tableName + " WHERE ID = " + id;
            st.executeUpdate(query);
            loadData(tableName);
            
            
            st.close();
        } catch (SQLException ex) {
            System.out.println(ex.getLocalizedMessage());
        }
        
    }
    
    void loadData (String tableName) {
        try {
            ConDB conn = new ConDB();
            Statement st = conn.getConnection().createStatement();
            String query = "SELECT * FROM " + tableName;
            ResultSet rs = st.executeQuery(query);
            JTable table = new JTable();
            switch(tableName) {
                case "warehouses":
                    table = showWarehousesTable;
                    break;
                case "products":
                    table = showProductsTable;
                    break;
                case "report":
                    table = reportTable;
                    break;
            }
            
            while(table.getRowCount() > 0) {
                ((DefaultTableModel)table.getModel()).removeRow(0);
            }
            int col = rs.getMetaData().getColumnCount();
            while(rs.next()) {
                Object[] rows = new Object[col];
                for(int i = 1; i <= col; i++) {
                    rows[i-1] = rs.getObject(i);
                }
                ((DefaultTableModel)table.getModel()).insertRow(rs.getRow()-1,rows);
            }
            rs.close();
            st.close();
        } catch (SQLException ex) {
            System.out.println(ex.getLocalizedMessage());
        }
    }
    
    void loadReport() {
        try {
            ConDB conn = new ConDB();
            Statement st = conn.getConnection().createStatement();
            String query = "SELECT * FROM report";
            ResultSet rs = st.executeQuery(query);
            JTable table = reportTable;

            while (table.getRowCount() > 0) {
                ((DefaultTableModel) table.getModel()).removeRow(0);
            }
            int col = rs.getMetaData().getColumnCount();
//            while (rs.next()) {
//                Object[] rows = new Object[col];
//                for (int i = 1; i <= col; i++) {
//                    rows[i - 1] = rs.getObject(i);
//                }
//                ((DefaultTableModel) table.getModel()).insertRow(rs.getRow() - 1, rows);
//            }

            List<Report> reportList = new ArrayList<>();
            while(rs.next()) {
                Report report = new Report(rs.getString("productName") , 
                        rs.getInt("on stock"), rs.getInt("sold"),
                        rs.getInt("total"), rs.getInt("warehouse_id"),
                        rs.getInt("min"), rs.getInt("max"));
                reportList.add(report);
            }
            
            Object rowData[] = new Object[7];
            table.setModel(new DefaultTableModel(new Object[][] {},new String[] {
            "Product Name","Sold","Total","Warehouse", "min", "max", "On Stock"}));
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            for(int i = 0; i < reportList.size(); i ++) {
                rowData[0] = reportList.get(i).getProductName();
                rowData[1] = reportList.get(i).getSold();
                rowData[2] = reportList.get(i).getTotal();
                rowData[3] = reportList.get(i).getWarehouse();
                rowData[4] = reportList.get(i).getMin();
                rowData[5] = reportList.get(i).getMax();
                rowData[6] = reportList.get(i).getStock();
                
                model.addRow(rowData);
                TableColorCellRenderer renderer = new TableColorCellRenderer();
                table.setDefaultRenderer(Object.class, renderer);
            }
            
            rs.close();
            st.close();
            
            

            

        } catch (SQLException ex) {
            System.out.println(ex.getLocalizedMessage());
        }

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProductBtn;
    private javax.swing.JButton addWarehouseBtn;
    private javax.swing.JButton deleteProductBtn;
    private javax.swing.JButton deleteWarehouseBtn;
    private javax.swing.JButton editProductBtn;
    private javax.swing.JButton editWarehouseBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton reportBtn;
    private javax.swing.JTable reportTable;
    private javax.swing.JTable showProductsTable;
    private javax.swing.JTable showWarehousesTable;
    // End of variables declaration//GEN-END:variables


}
